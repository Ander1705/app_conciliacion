services:
  database:
    image: postgres:15-alpine
    container_name: conciliacion_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-conciliacion_prod}
      POSTGRES_USER: ${POSTGRES_USER:-conciliacion_admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ContraseñaSegura2024}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - conciliacion_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: conciliacion_backend
    restart: unless-stopped
    depends_on:
      - database
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/${POSTGRES_DB:-conciliacion_prod}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-conciliacion_admin}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-ContraseñaSegura2024}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "false"
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SERVER_PORT: 8082
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-https://82.112.250.211,http://82.112.250.211,http://localhost:5173,http://localhost:3000}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-production}
      JAVA_OPTS: ${JAVA_OPTS:--Xms512m -Xmx1024m}
    ports:
      - "${BACKEND_PORT:-8082}:8082"
    volumes:
      - backend_logs:/app/logs
      - ./backend/uploads:/app/uploads
    networks:
      - conciliacion_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: conciliacion_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-80}:80"
      - "${FRONTEND_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx-ssl.conf:/etc/nginx/nginx.conf:ro
      - /etc/ssl/certs:/etc/ssl/certs:ro
      - /etc/ssl/private:/etc/ssl/private:ro
    networks:
      - conciliacion_network

volumes:
  postgres_data:
    driver: local
    name: conciliacion_postgres_data
  backend_logs:
    driver: local
    name: conciliacion_backend_logs

networks:
  conciliacion_network:
    driver: bridge
    name: conciliacion_network