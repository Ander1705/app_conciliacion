name: Deploy to VPS Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Permite ejecutar manualmente

jobs:
  deploy:
    name: Deploy to Production VPS
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          # Logging
          echo "üöÄ Starting deployment at $(date)"
          
          # Navigate to project directory
          cd ~/app_conciliacion
          
          # Backup current state
          echo "üì¶ Creating backup..."
          docker-compose ps > ~/backup-$(date +%Y%m%d_%H%M%S).log
          
          # Pull latest changes
          echo "‚¨áÔ∏è Pulling latest changes..."
          git fetch --all
          git reset --hard origin/main
          git pull origin main
          
          # Stop current services
          echo "‚èπÔ∏è Stopping current services..."
          docker-compose down
          
          # Clean up old images (optional - saves space)
          echo "üßπ Cleaning up old Docker images..."
          docker system prune -f
          
          # Build and start services
          echo "üî® Building and starting services..."
          docker-compose up --build -d
          
          # Wait for services to be ready
          echo "‚è≥ Waiting for services to start..."
          sleep 45
          
          # Health check
          echo "üè• Performing health check..."
          MAX_ATTEMPTS=10
          ATTEMPT=1
          
          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            if curl -f http://localhost:8082/api/ > /dev/null 2>&1; then
              echo "‚úÖ Backend health check passed!"
              break
            else
              echo "üîÑ Health check attempt $ATTEMPT/$MAX_ATTEMPTS failed, retrying..."
              sleep 10
              ATTEMPT=$((ATTEMPT + 1))
            fi
          done
          
          if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
            echo "‚ùå Health check failed after $MAX_ATTEMPTS attempts"
            echo "üìã Container status:"
            docker-compose ps
            echo "üìã Backend logs:"
            docker-compose logs --tail=50 backend
            exit 1
          fi
          
          # Check frontend
          if curl -f http://localhost/ > /dev/null 2>&1; then
            echo "‚úÖ Frontend health check passed!"
          else
            echo "‚ö†Ô∏è Frontend health check failed"
          fi
          
          # Final status
          echo "üìä Final deployment status:"
          docker-compose ps
          
          echo "üéâ Deployment completed successfully at $(date)!"
          echo "üåê Application available at: http://82.112.250.211"

    - name: Notify on failure
      if: failure()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          echo "‚ùå Deployment failed at $(date)" >> ~/deployment-failures.log
          # Aqu√≠ puedes agregar notificaciones webhook